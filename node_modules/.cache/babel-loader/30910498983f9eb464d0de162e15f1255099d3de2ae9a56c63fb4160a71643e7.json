{"ast":null,"code":"var _jsxFileName = \"I:\\\\Hatchcoders\\\\src\\\\Components\\\\Banner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport '../Style.css';\nimport ImageSlider from './ImageSlider';\nimport { ReactTyped } from 'react-typed';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Banner = () => {\n  _s();\n  // Refs for h1 and p elements\n  const h1Ref = useRef(null);\n  const pRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry], observerInstance) => {\n      if (entry.isIntersecting) {\n        // Add 'active' class when element comes into view\n        entry.target.classList.add('active');\n\n        // Stop observing after first trigger\n        observerInstance.unobserve(entry.target);\n      }\n    }, {\n      threshold: 0.1\n    } // trigger when 10% visible\n    );\n    if (h1Ref.current) {\n      observer.observe(h1Ref.current);\n    }\n    if (pRef.current) {\n      observer.observe(pRef.current);\n    }\n    return () => observer.disconnect(); // clean up\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"main-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-txt\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"slide-up h1-active\",\n          ref: h1Ref,\n          children: [\"We Design \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Strong Visual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 23\n          }, this), \" and\", ' ', /*#__PURE__*/_jsxDEV(ReactTyped, {\n            strings: ['Digital Products', 'Web Designing', 'Web Development', 'UI/UX Designing', 'App Development', 'Game Development'],\n            typeSpeed: 50,\n            backSpeed: 30,\n            backDelay: 2000,\n            loop: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"slide-up p-active\",\n          ref: pRef,\n          children: \"Crafting innovative ideas to bring a smile to your users worldwide through exceptional design and functionality.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageSlider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Banner, \"4utVg3x1Z8WkkckX/7rY56sy8HM=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useRef","ImageSlider","ReactTyped","jsxDEV","_jsxDEV","Fragment","_Fragment","Banner","_s","h1Ref","pRef","observer","IntersectionObserver","entry","observerInstance","isIntersecting","target","classList","add","unobserve","threshold","current","observe","disconnect","children","className","ref","style","color","fileName","_jsxFileName","lineNumber","columnNumber","strings","typeSpeed","backSpeed","backDelay","loop","_c","$RefreshReg$"],"sources":["I:/Hatchcoders/src/Components/Banner.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport '../Style.css';\r\nimport ImageSlider from './ImageSlider';\r\nimport { ReactTyped } from 'react-typed';\r\n\r\nconst Banner = () => {\r\n\r\n   // Refs for h1 and p elements\r\n   const h1Ref = useRef(null);\r\n   const pRef = useRef(null);\r\n \r\n   useEffect(() => {\r\n     const observer = new IntersectionObserver(\r\n       ([entry], observerInstance) => {\r\n         if (entry.isIntersecting) {\r\n           // Add 'active' class when element comes into view\r\n           entry.target.classList.add('active');\r\n \r\n           // Stop observing after first trigger\r\n           observerInstance.unobserve(entry.target);\r\n         }\r\n       },\r\n       { threshold: 0.1 } // trigger when 10% visible\r\n     );\r\n \r\n     if (h1Ref.current) {\r\n       observer.observe(h1Ref.current);\r\n     }\r\n     if (pRef.current) {\r\n       observer.observe(pRef.current);\r\n     }\r\n \r\n     return () => observer.disconnect(); // clean up\r\n   }, []);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"main-banner\">\r\n        <div className=\"banner-txt\">\r\n          {/* Primary heading with targeted keywords */}\r\n          <h1 className=\"slide-up h1-active\" ref={h1Ref}>\r\n            We Design <span style={{ color: \"red\" }}>Strong Visual</span> and{' '}\r\n            <ReactTyped\r\n              strings={[\r\n                'Digital Products',\r\n                'Web Designing',\r\n                'Web Development',\r\n                'UI/UX Designing',\r\n                'App Development',\r\n                'Game Development',\r\n              ]}\r\n              typeSpeed={50}\r\n              backSpeed={30}\r\n              backDelay={2000}\r\n              loop\r\n            />\r\n          </h1>\r\n          {/* Supporting text with relevant keywords */}\r\n          <p className=\"slide-up p-active\" ref={pRef}>\r\n            Crafting innovative ideas to bring a smile to your users worldwide through exceptional design and functionality.\r\n          </p>\r\n        </div>\r\n\r\n        {/* ImageSlider for showcasing visual content */}\r\n        <ImageSlider />\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}