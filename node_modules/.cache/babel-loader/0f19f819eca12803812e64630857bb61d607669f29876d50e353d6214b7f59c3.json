{"ast":null,"code":"var _jsxFileName = \"I:\\\\Hatchcoders\\\\src\\\\Components\\\\Banner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport '../Style.css';\nimport ImageSlider from './ImageSlider';\nimport { ReactTyped } from 'react-typed';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Banner = () => {\n  _s();\n  const tutRef = useRef(null); // create a reference for the element you want to animate\n\n  useEffect(() => {\n    // Create an IntersectionObserver instance\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        // If the element is in the viewport, add 'active' class\n        entry.target.classList.add('active');\n      } else {\n        // If the element is NOT in the viewport, remove 'active' class\n        entry.target.classList.remove('active');\n      }\n    }, {\n      threshold: 0.1\n    } // trigger when 10% of the element is visible\n    );\n\n    // Start observing the element\n    if (tutRef.current) {\n      observer.observe(tutRef.current);\n    }\n\n    // Cleanup function to disconnect the observer when the component unmounts\n    return () => observer.disconnect();\n  }, []); // empty dependency array → runs only once after mount\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"main-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-txt slide-up\",\n        ref: tutRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"We Design \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Strong Visual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 23\n          }, this), \" and\", ' ', /*#__PURE__*/_jsxDEV(ReactTyped, {\n            strings: ['Digital Products', 'Web Designing', 'Web Development', 'UI/UX Designing', 'App Development', 'Game Development'],\n            typeSpeed: 50,\n            backSpeed: 30,\n            backDelay: 2000,\n            loop: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Crafting innovative ideas to bring a smile to your users worldwide through exceptional design and functionality.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageSlider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Banner, \"4DQyGjZl4bPOyubKu2VKw8d1HwE=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useRef","ImageSlider","ReactTyped","jsxDEV","_jsxDEV","Fragment","_Fragment","Banner","_s","tutRef","observer","IntersectionObserver","entry","isIntersecting","target","classList","add","remove","threshold","current","observe","disconnect","children","className","ref","style","color","fileName","_jsxFileName","lineNumber","columnNumber","strings","typeSpeed","backSpeed","backDelay","loop","_c","$RefreshReg$"],"sources":["I:/Hatchcoders/src/Components/Banner.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport '../Style.css';\r\nimport ImageSlider from './ImageSlider';\r\nimport { ReactTyped } from 'react-typed';\r\n\r\nconst Banner = () => {\r\n\r\n  const tutRef = useRef(null); // create a reference for the element you want to animate\r\n\r\n  useEffect(() => {\r\n    // Create an IntersectionObserver instance\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          // If the element is in the viewport, add 'active' class\r\n          entry.target.classList.add('active');\r\n        } else {\r\n          // If the element is NOT in the viewport, remove 'active' class\r\n          entry.target.classList.remove('active');\r\n        }\r\n      },\r\n      { threshold: 0.1 } // trigger when 10% of the element is visible\r\n    );\r\n\r\n    // Start observing the element\r\n    if (tutRef.current) {\r\n      observer.observe(tutRef.current);\r\n    }\r\n\r\n    // Cleanup function to disconnect the observer when the component unmounts\r\n    return () => observer.disconnect();\r\n  }, []); // empty dependency array → runs only once after mount\r\n\r\n\r\n  return (\r\n    <>\r\n      <header className=\"main-banner\">\r\n        <div className=\"banner-txt slide-up\" ref={tutRef}>\r\n          {/* Primary heading with targeted keywords */}\r\n          <h1>\r\n            We Design <span style={{ color: \"red\" }}>Strong Visual</span> and{' '}\r\n            <ReactTyped\r\n              strings={[\r\n                'Digital Products',\r\n                'Web Designing',\r\n                'Web Development',\r\n                'UI/UX Designing',\r\n                'App Development',\r\n                'Game Development',\r\n              ]}\r\n              typeSpeed={50}\r\n              backSpeed={30}\r\n              backDelay={2000}\r\n              loop\r\n            />\r\n          </h1>\r\n          {/* Supporting text with relevant keywords */}\r\n          <p>\r\n            Crafting innovative ideas to bring a smile to your users worldwide through exceptional design and functionality.\r\n          </p>\r\n        </div>\r\n\r\n        {/* ImageSlider for showcasing visual content */}\r\n        <ImageSlider />\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,cAAc;AACrB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,UAAU,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAMC,MAAM,GAAGT,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE7BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxB;QACAD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;MACtC,CAAC,MAAM;QACL;QACAJ,KAAK,CAACE,MAAM,CAACC,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;MACzC;IACF,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,CAAC,CAAC;IACrB,CAAC;;IAED;IACA,IAAIT,MAAM,CAACU,OAAO,EAAE;MAClBT,QAAQ,CAACU,OAAO,CAACX,MAAM,CAACU,OAAO,CAAC;IAClC;;IAEA;IACA,OAAO,MAAMT,QAAQ,CAACW,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA;MAAQmB,SAAS,EAAC,aAAa;MAAAD,QAAA,gBAC7BlB,OAAA;QAAKmB,SAAS,EAAC,qBAAqB;QAACC,GAAG,EAAEf,MAAO;QAAAa,QAAA,gBAE/ClB,OAAA;UAAAkB,QAAA,GAAI,YACQ,eAAAlB,OAAA;YAAMqB,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAM,CAAE;YAAAJ,QAAA,EAAC;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,QAAI,EAAC,GAAG,eACrE1B,OAAA,CAACF,UAAU;YACT6B,OAAO,EAAE,CACP,kBAAkB,EAClB,eAAe,EACf,iBAAiB,EACjB,iBAAiB,EACjB,iBAAiB,EACjB,kBAAkB,CAClB;YACFC,SAAS,EAAE,EAAG;YACdC,SAAS,EAAE,EAAG;YACdC,SAAS,EAAE,IAAK;YAChBC,IAAI;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAEL1B,OAAA;UAAAkB,QAAA,EAAG;QAEH;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGN1B,OAAA,CAACH,WAAW;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC,gBACT,CAAC;AAEP,CAAC;AAACtB,EAAA,CA9DID,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAgEZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}